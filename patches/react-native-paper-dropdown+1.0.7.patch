diff --git a/node_modules/react-native-paper-dropdown/dist/DropDown.d.ts b/node_modules/react-native-paper-dropdown/dist/DropDown.d.ts
index 1354c24..1524855 100644
--- a/node_modules/react-native-paper-dropdown/dist/DropDown.d.ts
+++ b/node_modules/react-native-paper-dropdown/dist/DropDown.d.ts
@@ -18,6 +18,7 @@ export interface DropDownPropsInterface {
         label: string;
         value: string | number;
         custom?: ReactNode;
+        uid: string;
     }>;
     dropDownContainerMaxHeight?: number;
     dropDownContainerHeight?: number;
diff --git a/node_modules/react-native-paper-dropdown/dist/DropDown.js b/node_modules/react-native-paper-dropdown/dist/DropDown.js
index 19bca20..e7ad807 100644
--- a/node_modules/react-native-paper-dropdown/dist/DropDown.js
+++ b/node_modules/react-native-paper-dropdown/dist/DropDown.js
@@ -1,4 +1,4 @@
-import { ScrollView, View, } from "react-native";
+import { FlatList, ScrollView, View, } from "react-native";
 import { Checkbox, Divider, Menu, TextInput, TouchableRipple, useTheme, } from "react-native-paper";
 import React, { forwardRef, useEffect, useState, useCallback, Fragment, } from "react";
 const DropDown = forwardRef((props, ref) => {
@@ -52,6 +52,39 @@ const DropDown = forwardRef((props, ref) => {
             setValue(currentValue);
         }
     }, [value]);
+    const renderItem = ({item:_item, index}) =>(<Fragment key={_item.value}>
+        <TouchableRipple style={{
+            flexDirection: "row",
+            alignItems: "center",
+        }} onPress={() => {
+            setActive(_item.value);
+            if (onDismiss) {
+                onDismiss();
+            }
+        }}>
+            <Fragment>
+                <Menu.Item titleStyle={{
+                    color: isActive(_item.value)
+                        ? activeColor || (theme || activeTheme).colors.primary
+                        : (theme || activeTheme).colors.text,
+                    ...(isActive(_item.value)
+                        ? dropDownItemSelectedTextStyle
+                        : dropDownItemTextStyle),
+                }} title={_item.custom || _item.label} style={{
+                    flex: 1,
+                    maxWidth: inputLayout?.width,
+                    ...(isActive(_item.value)
+                        ? dropDownItemSelectedStyle
+                        : dropDownItemStyle),
+                }} />
+                {multiSelect && (<Checkbox.Android theme={{
+                    colors: { accent: activeTheme?.colors.primary },
+                }} status={isActive(_item.value) ? "checked" : "unchecked"} onPress={() => setActive(_item.value)} />)}
+            </Fragment>
+        </TouchableRipple>
+        <Divider />
+    </Fragment>);
+
     return (<Menu visible={visible} onDismiss={onDismiss} theme={theme} anchor={<TouchableRipple ref={ref} onPress={showDropDown} onLayout={onLayout} accessibilityLabel={accessibilityLabel}>
             <View pointerEvents={"none"}>
               <TextInput value={displayValue} mode={mode} label={label} placeholder={placeholder} pointerEvents={"none"} theme={theme} right={<TextInput.Icon name={visible ? "menu-up" : "menu-down"}/>} {...inputProps}/>
@@ -62,7 +95,21 @@ const DropDown = forwardRef((props, ref) => {
             marginTop: inputLayout?.height,
             ...dropDownStyle,
         }}>
-        <ScrollView bounces={false} style={{
+        <FlatList data={list} renderItem={renderItem} keyExtractor={(item) => item.uid} extraData={value}
+            removeClippedSubviews
+            style={{
+                ...(dropDownContainerHeight
+                    ? {
+                        height: dropDownContainerHeight,
+                    }
+                    : {
+                        maxHeight: dropDownContainerMaxHeight || 200,
+                    }),
+            }}
+        />
+        {/* <ScrollView bounces={false}
+            removeClippedSubviews
+            style={{
             ...(dropDownContainerHeight
                 ? {
                     height: dropDownContainerHeight,
@@ -103,7 +150,7 @@ const DropDown = forwardRef((props, ref) => {
               </TouchableRipple>
               <Divider />
             </Fragment>))}
-        </ScrollView>
+        </ScrollView> */}
       </Menu>);
 });
 export default DropDown;
