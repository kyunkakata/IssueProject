diff --git a/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-prod.js b/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-prod.js
index 1d79146..6c7fefb 100644
--- a/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-prod.js
+++ b/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-prod.js
@@ -8025,7 +8025,7 @@ exports.createPortal = function(children, containerTag) {
   );
 };
 exports.dispatchCommand = function(handle, command, args) {
-  null != handle._nativeTag &&
+  handle && null != handle._nativeTag &&
     (handle._internalInstanceHandle
       ? nativeFabricUIManager.dispatchCommand(
           handle._internalInstanceHandle.stateNode.node,
diff --git a/node_modules/react-native/react.gradle b/node_modules/react-native/react.gradle
index b841e16..afcab93 100644
--- a/node_modules/react-native/react.gradle
+++ b/node_modules/react-native/react.gradle
@@ -284,24 +284,18 @@ afterEvaluate {
                 into(file(config."jsBundleDir${targetName}"))
             } else {
                 into ("$buildDir/intermediates")
-                if (isAndroidLibrary) {
-                    into ("library_assets/${variant.name}/out") {
-                        from(jsBundleDir)
-                    }
-                } else {
-                    into ("assets/${targetPath}") {
-                        from(jsBundleDir)
-                    }
+                into ("assets/${targetPath}") {
+                    from(jsBundleDir)
+                }
 
-                    // Workaround for Android Gradle Plugin 3.2+ new asset directory
-                    into ("merged_assets/${variant.name}/merge${targetName}Assets/out") {
-                        from(jsBundleDir)
-                    }
+                // Workaround for Android Gradle Plugin 3.2+ new asset directory
+                into ("merged_assets/${variant.name}/merge${targetName}Assets/out") {
+                    from(jsBundleDir)
+                }
 
-                    // Workaround for Android Gradle Plugin 3.4+ new asset directory
-                    into ("merged_assets/${variant.name}/out") {
-                        from(jsBundleDir)
-                    }
+                // Workaround for Android Gradle Plugin 3.4+ new asset directory
+                into ("merged_assets/${variant.name}/out") {
+                    from(jsBundleDir)
                 }
             }
 
@@ -309,7 +303,6 @@ afterEvaluate {
             dependsOn(variant.mergeAssetsProvider.get())
 
             enabled(currentBundleTask.enabled)
-            dependsOn(currentBundleTask)
         }
 
         // mergeResources task runs before the bundle file is copied to the intermediate asset directory from Android plugin 4.1+.
@@ -329,8 +322,7 @@ afterEvaluate {
         // two separate HermesDebug and HermesRelease AARs, but until then we'll
         // kludge it by deleting the .so files out of the /transforms/ directory.
         def isRelease = targetName.toLowerCase().contains("release")
-        def libDir = "$buildDir/intermediates/transforms/"
-        def vmSelectionAction = {
+        def vmSelectionAction = { libDir ->
             fileTree(libDir).matching {
                 if (enableHermes) {
                     // For Hermes, delete all the libjsc* files
@@ -340,26 +332,48 @@ afterEvaluate {
                         // Reduce size by deleting the debugger/inspector
                         include '**/libhermes-inspector.so'
                         include '**/libhermes-executor-debug.so'
+                        include '**/libhermes-executor-common-debug.so'
                     } else {
                         // Release libs take precedence and must be removed
                         // to allow debugging
                         include '**/libhermes-executor-release.so'
+                        include '**/libhermes-executor-common-release.so'
                     }
                 } else {
                     // For JSC, delete all the libhermes* files
                     include "**/libhermes*.so"
+                    // Delete the libjscexecutor from release build
+                    if (isRelease) {
+                        include "**/libjscexecutor.so"
+                    }
                 }
             }.visit { details ->
-                def targetVariant = ".*/transforms/[^/]*/${targetPath}/.*"
+                def targetVariant1 = ".*/transforms/[^/]*/${targetPath}/.*"
+                def targetVariant2 = ".*/merged_native_libs/${targetPath}/out/lib/.*"
+                def targetVariant3 = ".*/stripped_native_libs/${targetPath}/out/lib/.*"
                 def path = details.file.getAbsolutePath().replace(File.separatorChar, '/' as char)
-                if (path.matches(targetVariant) && details.file.isFile()) {
+                if ((path.matches(targetVariant1) || path.matches(targetVariant2) || path.matches(targetVariant3)) && details.file.isFile()) {
                     details.file.delete()
                 }
             }
         }
 
         if (enableVmCleanup) {
-            packageTask.doFirst(vmSelectionAction)
+            def task = tasks.findByName("package${targetName}")
+            def transformsLibDir = "$buildDir/intermediates/transforms/"
+            task.doFirst { vmSelectionAction(transformsLibDir) }
+
+            def sTask = tasks.findByName("strip${targetName}DebugSymbols")
+            if (sTask != null) {
+                def strippedLibDir = "$buildDir/intermediates/stripped_native_libs/${targetPath}/out/lib/"
+                sTask.doLast { vmSelectionAction(strippedLibDir) }
+            }
+
+            def mTask = tasks.findByName("merge${targetName}NativeLibs")
+            if (mTask != null) {
+                def mergedLibDir = "$buildDir/intermediates/merged_native_libs/${targetPath}/out/lib/"
+                mTask.doLast { vmSelectionAction(mergedLibDir) }
+            }
         }
     }
 }
diff --git a/node_modules/react-native/scripts/.packager.env b/node_modules/react-native/scripts/.packager.env
new file mode 100644
index 0000000..21a13cf
--- /dev/null
+++ b/node_modules/react-native/scripts/.packager.env
@@ -0,0 +1 @@
+export RCT_METRO_PORT=8081
\ No newline at end of file
